<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="48" passed="46" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-08T10:46:00 IST" name="Suite" finished-at="2023-03-08T10:58:58 IST" duration-ms="778488">
    <groups>
    </groups>
    <test started-at="2023-03-08T10:46:00 IST" name="Test" finished-at="2023-03-08T10:58:58 IST" duration-ms="778488">
      <class name="CompanyScripts.compCreatePostScripts">
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:51:28 IST" name="openApp" finished-at="2023-03-08T10:51:32 IST" duration-ms="3439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="UploadText()[pri:1, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:51:32 IST" name="UploadText" finished-at="2023-03-08T10:51:40 IST" duration-ms="8667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UploadText -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:51:40 IST" name="closeApp" finished-at="2023-03-08T10:51:42 IST" duration-ms="1310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UploadText status=SUCCESS method=compCreatePostScripts.UploadText()[pri:1, instance:CompanyScripts.compCreatePostScripts@70e8f8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:51:42 IST" name="openApp" finished-at="2023-03-08T10:51:45 IST" duration-ms="3501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="UploadImage()[pri:2, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:51:45 IST" name="UploadImage" finished-at="2023-03-08T10:51:54 IST" duration-ms="8798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UploadImage -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:51:54 IST" name="closeApp" finished-at="2023-03-08T10:51:55 IST" duration-ms="1208" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UploadImage status=SUCCESS method=compCreatePostScripts.UploadImage()[pri:2, instance:CompanyScripts.compCreatePostScripts@70e8f8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:51:55 IST" name="openApp" finished-at="2023-03-08T10:51:59 IST" duration-ms="3570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="UploadVideo()[pri:3, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:51:59 IST" name="UploadVideo" finished-at="2023-03-08T10:52:11 IST" duration-ms="12614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UploadVideo -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:52:11 IST" name="closeApp" finished-at="2023-03-08T10:52:12 IST" duration-ms="395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UploadVideo status=SUCCESS method=compCreatePostScripts.UploadVideo()[pri:3, instance:CompanyScripts.compCreatePostScripts@70e8f8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:52:12 IST" name="openApp" finished-at="2023-03-08T10:52:15 IST" duration-ms="3289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="Upload_youtube_Url()[pri:4, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:52:15 IST" name="Upload_youtube_Url" finished-at="2023-03-08T10:52:28 IST" duration-ms="12842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Upload_youtube_Url -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:52:28 IST" name="closeApp" finished-at="2023-03-08T10:52:28 IST" duration-ms="321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Upload_youtube_Url status=SUCCESS method=compCreatePostScripts.Upload_youtube_Url()[pri:4, instance:CompanyScripts.compCreatePostScripts@70e8f8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:52:28 IST" name="openApp" finished-at="2023-03-08T10:52:31 IST" duration-ms="3239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="upload_Five_Images()[pri:5, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:52:31 IST" name="upload_Five_Images" finished-at="2023-03-08T10:52:50 IST" duration-ms="18199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- upload_Five_Images -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:52:50 IST" name="closeApp" finished-at="2023-03-08T10:52:50 IST" duration-ms="317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=upload_Five_Images status=SUCCESS method=compCreatePostScripts.upload_Five_Images()[pri:5, instance:CompanyScripts.compCreatePostScripts@70e8f8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:52:50 IST" name="openApp" finished-at="2023-03-08T10:52:54 IST" duration-ms="4212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="upload_FivePlus_Images()[pri:6, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:52:54 IST" name="upload_FivePlus_Images" finished-at="2023-03-08T10:53:13 IST" duration-ms="19172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- upload_FivePlus_Images -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:53:13 IST" name="closeApp" finished-at="2023-03-08T10:53:14 IST" duration-ms="521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=upload_FivePlus_Images status=SUCCESS method=compCreatePostScripts.upload_FivePlus_Images()[pri:6, instance:CompanyScripts.compCreatePostScripts@70e8f8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:53:14 IST" name="openApp" finished-at="2023-03-08T10:53:18 IST" duration-ms="3670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="public_Employees()[pri:8, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:53:18 IST" name="public_Employees" finished-at="2023-03-08T10:53:26 IST" duration-ms="8561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- public_Employees -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:53:26 IST" name="closeApp" finished-at="2023-03-08T10:53:27 IST" duration-ms="475" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=public_Employees status=SUCCESS method=compCreatePostScripts.public_Employees()[pri:8, instance:CompanyScripts.compCreatePostScripts@70e8f8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:53:27 IST" name="openApp" finished-at="2023-03-08T10:53:30 IST" duration-ms="3330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="public_Manaufacturer()[pri:9, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:53:30 IST" name="public_Manaufacturer" finished-at="2023-03-08T10:53:37 IST" duration-ms="7229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- public_Manaufacturer -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:53:37 IST" name="closeApp" finished-at="2023-03-08T10:53:37 IST" duration-ms="297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=public_Manaufacturer status=SUCCESS method=compCreatePostScripts.public_Manaufacturer()[pri:9, instance:CompanyScripts.compCreatePostScripts@70e8f8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:53:37 IST" name="openApp" finished-at="2023-03-08T10:53:41 IST" duration-ms="3471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="public_Share_holder()[pri:10, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:53:41 IST" name="public_Share_holder" finished-at="2023-03-08T10:53:48 IST" duration-ms="7123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- public_Share_holder -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:53:48 IST" name="closeApp" finished-at="2023-03-08T10:53:48 IST" duration-ms="358" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=public_Share_holder status=SUCCESS method=compCreatePostScripts.public_Share_holder()[pri:10, instance:CompanyScripts.compCreatePostScripts@70e8f8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:53:48 IST" name="openApp" finished-at="2023-03-08T10:53:52 IST" duration-ms="3518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="public_Vendor()[pri:11, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:53:52 IST" name="public_Vendor" finished-at="2023-03-08T10:54:01 IST" duration-ms="8961" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- public_Vendor -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:54:01 IST" name="closeApp" finished-at="2023-03-08T10:54:01 IST" duration-ms="379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=public_Vendor status=SUCCESS method=compCreatePostScripts.public_Vendor()[pri:11, instance:CompanyScripts.compCreatePostScripts@70e8f8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:54:01 IST" name="openApp" finished-at="2023-03-08T10:54:05 IST" duration-ms="3294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="public_ALL_Man_Vend_Dist()[pri:12, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:54:05 IST" name="public_ALL_Man_Vend_Dist" finished-at="2023-03-08T10:54:15 IST" duration-ms="10688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- public_ALL_Man_Vend_Dist -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:54:15 IST" name="closeApp" finished-at="2023-03-08T10:54:16 IST" duration-ms="404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=public_ALL_Man_Vend_Dist status=SUCCESS method=compCreatePostScripts.public_ALL_Man_Vend_Dist()[pri:12, instance:CompanyScripts.compCreatePostScripts@70e8f8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:54:16 IST" name="openApp" finished-at="2023-03-08T10:54:19 IST" duration-ms="3281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="public_ALL_Emp_Part_Share()[pri:13, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:54:19 IST" name="public_ALL_Emp_Part_Share" finished-at="2023-03-08T10:54:26 IST" duration-ms="6851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- public_ALL_Emp_Part_Share -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:54:26 IST" name="closeApp" finished-at="2023-03-08T10:54:26 IST" duration-ms="391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=public_ALL_Emp_Part_Share status=SUCCESS method=compCreatePostScripts.public_ALL_Emp_Part_Share()[pri:13, instance:CompanyScripts.compCreatePostScripts@70e8f8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:54:26 IST" name="openApp" finished-at="2023-03-08T10:54:30 IST" duration-ms="3458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="Status_archieve()[pri:14, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:54:30 IST" name="Status_archieve" finished-at="2023-03-08T10:54:41 IST" duration-ms="11715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Status_archieve -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:54:41 IST" name="closeApp" finished-at="2023-03-08T10:54:43 IST" duration-ms="1204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Status_archieve status=SUCCESS method=compCreatePostScripts.Status_archieve()[pri:14, instance:CompanyScripts.compCreatePostScripts@70e8f8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:54:43 IST" name="openApp" finished-at="2023-03-08T10:54:46 IST" duration-ms="3197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="UploadImageAndCancel()[pri:15, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:54:46 IST" name="UploadImageAndCancel" finished-at="2023-03-08T10:54:54 IST" duration-ms="8044" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UploadImageAndCancel -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:54:54 IST" name="closeApp" finished-at="2023-03-08T10:54:55 IST" duration-ms="1424" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UploadImageAndCancel status=SUCCESS method=compCreatePostScripts.UploadImageAndCancel()[pri:15, instance:CompanyScripts.compCreatePostScripts@70e8f8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:54:55 IST" name="openApp" finished-at="2023-03-08T10:54:59 IST" duration-ms="3454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="public_Distribtor()[pri:16, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:54:59 IST" name="public_Distribtor" finished-at="2023-03-08T10:55:08 IST" duration-ms="9548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- public_Distribtor -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compCreatePostScripts@70e8f8e]" started-at="2023-03-08T10:55:08 IST" name="closeApp" finished-at="2023-03-08T10:55:09 IST" duration-ms="526" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=public_Distribtor status=SUCCESS method=compCreatePostScripts.public_Distribtor()[pri:16, instance:CompanyScripts.compCreatePostScripts@70e8f8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- CompanyScripts.compCreatePostScripts -->
      <class name="CompanyScripts.compNetworks">
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:00 IST" name="openApp" finished-at="2023-03-08T10:46:06 IST" duration-ms="6502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="networksPage()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:06 IST" name="networksPage" finished-at="2023-03-08T10:46:12 IST" duration-ms="6102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- networksPage -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:12 IST" name="closeApp" finished-at="2023-03-08T10:46:13 IST" duration-ms="351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=networksPage status=SUCCESS method=compNetworks.networksPage()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:13 IST" name="openApp" finished-at="2023-03-08T10:46:16 IST" duration-ms="3731" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="nPendingFeature()[pri:1, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:16 IST" name="nPendingFeature" finished-at="2023-03-08T10:46:21 IST" duration-ms="4923" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nPendingFeature -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:21 IST" name="closeApp" finished-at="2023-03-08T10:46:22 IST" duration-ms="307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nPendingFeature status=SUCCESS method=compNetworks.nPendingFeature()[pri:1, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:22 IST" name="openApp" finished-at="2023-03-08T10:46:25 IST" duration-ms="3305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="nFollowFeature()[pri:2, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:25 IST" name="nFollowFeature" finished-at="2023-03-08T10:46:30 IST" duration-ms="4870" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nFollowFeature -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:30 IST" name="closeApp" finished-at="2023-03-08T10:46:30 IST" duration-ms="253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nFollowFeature status=SUCCESS method=compNetworks.nFollowFeature()[pri:2, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:30 IST" name="openApp" finished-at="2023-03-08T10:46:34 IST" duration-ms="3387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="nBlockList()[pri:3, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:34 IST" name="nBlockList" finished-at="2023-03-08T10:46:38 IST" duration-ms="4680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nBlockList -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:38 IST" name="closeApp" finished-at="2023-03-08T10:46:38 IST" duration-ms="212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nBlockList status=SUCCESS method=compNetworks.nBlockList()[pri:3, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:38 IST" name="openApp" finished-at="2023-03-08T10:46:42 IST" duration-ms="3210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="All_RelationsFilter()[pri:4, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:42 IST" name="All_RelationsFilter" finished-at="2023-03-08T10:46:48 IST" duration-ms="6679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- All_RelationsFilter -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:48 IST" name="closeApp" finished-at="2023-03-08T10:46:49 IST" duration-ms="448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=All_RelationsFilter status=SUCCESS method=compNetworks.All_RelationsFilter()[pri:4, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:49 IST" name="openApp" finished-at="2023-03-08T10:46:54 IST" duration-ms="4958" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="HumanResorseOf_RelationsFilter()[pri:5, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:46:54 IST" name="HumanResorseOf_RelationsFilter" finished-at="2023-03-08T10:47:00 IST" duration-ms="6173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HumanResorseOf_RelationsFilter -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:47:00 IST" name="closeApp" finished-at="2023-03-08T10:47:00 IST" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HumanResorseOf_RelationsFilter status=SUCCESS method=compNetworks.HumanResorseOf_RelationsFilter()[pri:5, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:47:00 IST" name="openApp" finished-at="2023-03-08T10:47:04 IST" duration-ms="3741" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="partenerOF_RelationsFilter()[pri:6, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:47:04 IST" name="partenerOF_RelationsFilter" finished-at="2023-03-08T10:47:10 IST" duration-ms="5621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partenerOF_RelationsFilter -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:47:10 IST" name="closeApp" finished-at="2023-03-08T10:47:10 IST" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=partenerOF_RelationsFilter status=SUCCESS method=compNetworks.partenerOF_RelationsFilter()[pri:6, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:47:10 IST" name="openApp" finished-at="2023-03-08T10:47:13 IST" duration-ms="3483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="CompanyProfile()[pri:7, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:47:13 IST" name="CompanyProfile" finished-at="2023-03-08T10:47:23 IST" duration-ms="9777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CompanyProfile -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:47:23 IST" name="closeApp" finished-at="2023-03-08T10:47:23 IST" duration-ms="260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CompanyProfile status=SUCCESS method=compNetworks.CompanyProfile()[pri:7, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:47:23 IST" name="openApp" finished-at="2023-03-08T10:47:27 IST" duration-ms="3488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="CompanyFollow_Unfollow()[pri:8, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:47:27 IST" name="CompanyFollow_Unfollow" finished-at="2023-03-08T10:47:41 IST" duration-ms="14219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CompanyFollow_Unfollow -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:47:41 IST" name="closeApp" finished-at="2023-03-08T10:47:41 IST" duration-ms="269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CompanyFollow_Unfollow status=SUCCESS method=compNetworks.CompanyFollow_Unfollow()[pri:8, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:47:41 IST" name="openApp" finished-at="2023-03-08T10:47:45 IST" duration-ms="3797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="Recommanded_Industries()[pri:9, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:47:45 IST" name="Recommanded_Industries" finished-at="2023-03-08T10:48:00 IST" duration-ms="14490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Recommanded_Industries -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:48:00 IST" name="closeApp" finished-at="2023-03-08T10:48:00 IST" duration-ms="335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Recommanded_Industries status=SUCCESS method=compNetworks.Recommanded_Industries()[pri:9, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:48:00 IST" name="openApp" finished-at="2023-03-08T10:48:04 IST" duration-ms="4228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="RecInd_NewsFeed()[pri:10, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:48:04 IST" name="RecInd_NewsFeed" finished-at="2023-03-08T10:48:20 IST" duration-ms="15742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecInd_NewsFeed -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:48:20 IST" name="closeApp" finished-at="2023-03-08T10:48:20 IST" duration-ms="310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RecInd_NewsFeed status=SUCCESS method=compNetworks.RecInd_NewsFeed()[pri:10, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:48:20 IST" name="openApp" finished-at="2023-03-08T10:48:24 IST" duration-ms="3430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="InviteBusiness()[pri:11, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:48:24 IST" name="InviteBusiness" finished-at="2023-03-08T10:48:32 IST" duration-ms="8059" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InviteBusiness -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:48:32 IST" name="closeApp" finished-at="2023-03-08T10:48:32 IST" duration-ms="253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InviteBusiness status=SUCCESS method=compNetworks.InviteBusiness()[pri:11, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:48:32 IST" name="openApp" finished-at="2023-03-08T10:48:36 IST" duration-ms="3616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="WhatsApp_InviteBusiness()[pri:12, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:48:36 IST" name="WhatsApp_InviteBusiness" finished-at="2023-03-08T10:48:47 IST" duration-ms="10966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WhatsApp_InviteBusiness -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:48:47 IST" name="closeApp" finished-at="2023-03-08T10:48:48 IST" duration-ms="1660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WhatsApp_InviteBusiness status=SUCCESS method=compNetworks.WhatsApp_InviteBusiness()[pri:12, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:48:48 IST" name="openApp" finished-at="2023-03-08T10:48:52 IST" duration-ms="3791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="Facebook_InviteBusiness()[pri:13, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:48:52 IST" name="Facebook_InviteBusiness" finished-at="2023-03-08T10:49:02 IST" duration-ms="10283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Facebook_InviteBusiness -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:49:02 IST" name="closeApp" finished-at="2023-03-08T10:49:03 IST" duration-ms="329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Facebook_InviteBusiness status=SUCCESS method=compNetworks.Facebook_InviteBusiness()[pri:13, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:49:03 IST" name="openApp" finished-at="2023-03-08T10:49:06 IST" duration-ms="3646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="Twitter_InviteBusiness()[pri:14, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:49:06 IST" name="Twitter_InviteBusiness" finished-at="2023-03-08T10:49:22 IST" duration-ms="15539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Twitter_InviteBusiness -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:49:22 IST" name="closeApp" finished-at="2023-03-08T10:49:22 IST" duration-ms="423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Twitter_InviteBusiness status=SUCCESS method=compNetworks.Twitter_InviteBusiness()[pri:14, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:49:22 IST" name="openApp" finished-at="2023-03-08T10:49:26 IST" duration-ms="3537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="Instagram_InviteBusiness()[pri:15, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:49:26 IST" name="Instagram_InviteBusiness" finished-at="2023-03-08T10:49:37 IST" duration-ms="11135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Instagram_InviteBusiness -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:49:37 IST" name="closeApp" finished-at="2023-03-08T10:49:37 IST" duration-ms="371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Instagram_InviteBusiness status=SUCCESS method=compNetworks.Instagram_InviteBusiness()[pri:15, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:49:37 IST" name="openApp" finished-at="2023-03-08T10:49:41 IST" duration-ms="3430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="Linkedin_InviteBusiness()[pri:16, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:49:41 IST" name="Linkedin_InviteBusiness" finished-at="2023-03-08T10:49:52 IST" duration-ms="11083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Linkedin_InviteBusiness -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:49:52 IST" name="closeApp" finished-at="2023-03-08T10:49:53 IST" duration-ms="1251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Linkedin_InviteBusiness status=SUCCESS method=compNetworks.Linkedin_InviteBusiness()[pri:16, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:49:53 IST" name="openApp" finished-at="2023-03-08T10:49:56 IST" duration-ms="3339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="Telegram_InviteBusiness()[pri:17, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:49:56 IST" name="Telegram_InviteBusiness" finished-at="2023-03-08T10:50:09 IST" duration-ms="12607" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Telegram_InviteBusiness -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:50:09 IST" name="closeApp" finished-at="2023-03-08T10:50:09 IST" duration-ms="398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Telegram_InviteBusiness status=SUCCESS method=compNetworks.Telegram_InviteBusiness()[pri:17, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:50:09 IST" name="openApp" finished-at="2023-03-08T10:50:15 IST" duration-ms="5814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="Gmail_InviteBusiness()[pri:18, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:50:15 IST" name="Gmail_InviteBusiness" finished-at="2023-03-08T10:50:27 IST" duration-ms="12023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Gmail_InviteBusiness -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNetworks@7c0c77c7]" started-at="2023-03-08T10:50:27 IST" name="closeApp" finished-at="2023-03-08T10:50:28 IST" duration-ms="1212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Gmail_InviteBusiness status=SUCCESS method=compNetworks.Gmail_InviteBusiness()[pri:18, instance:CompanyScripts.compNetworks@7c0c77c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- CompanyScripts.compNetworks -->
      <class name="CompanyScripts.ConfigureDeptScripts">
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.ConfigureDeptScripts@1622f1b]" started-at="2023-03-08T10:50:28 IST" name="openApp" finished-at="2023-03-08T10:50:32 IST" duration-ms="3443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="create_Dept()[pri:1, instance:CompanyScripts.ConfigureDeptScripts@1622f1b]" started-at="2023-03-08T10:50:32 IST" name="create_Dept" finished-at="2023-03-08T10:50:51 IST" duration-ms="18682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create_Dept -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.ConfigureDeptScripts@1622f1b]" started-at="2023-03-08T10:50:51 IST" name="closeApp" finished-at="2023-03-08T10:50:51 IST" duration-ms="236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=create_Dept status=SUCCESS method=ConfigureDeptScripts.create_Dept()[pri:1, instance:CompanyScripts.ConfigureDeptScripts@1622f1b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.ConfigureDeptScripts@1622f1b]" started-at="2023-03-08T10:50:51 IST" name="openApp" finished-at="2023-03-08T10:50:54 IST" duration-ms="3324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="Edit_Dept()[pri:2, instance:CompanyScripts.ConfigureDeptScripts@1622f1b]" started-at="2023-03-08T10:50:54 IST" name="Edit_Dept" finished-at="2023-03-08T10:51:11 IST" duration-ms="16891" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Edit_Dept -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.ConfigureDeptScripts@1622f1b]" started-at="2023-03-08T10:51:11 IST" name="closeApp" finished-at="2023-03-08T10:51:11 IST" duration-ms="282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Edit_Dept status=SUCCESS method=ConfigureDeptScripts.Edit_Dept()[pri:2, instance:CompanyScripts.ConfigureDeptScripts@1622f1b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.ConfigureDeptScripts@1622f1b]" started-at="2023-03-08T10:51:11 IST" name="openApp" finished-at="2023-03-08T10:51:15 IST" duration-ms="3303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="Delete_Dept()[pri:3, instance:CompanyScripts.ConfigureDeptScripts@1622f1b]" started-at="2023-03-08T10:51:15 IST" name="Delete_Dept" finished-at="2023-03-08T10:51:28 IST" duration-ms="13500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Delete_Dept -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.ConfigureDeptScripts@1622f1b]" started-at="2023-03-08T10:51:28 IST" name="closeApp" finished-at="2023-03-08T10:51:28 IST" duration-ms="242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Delete_Dept status=SUCCESS method=ConfigureDeptScripts.Delete_Dept()[pri:3, instance:CompanyScripts.ConfigureDeptScripts@1622f1b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- CompanyScripts.ConfigureDeptScripts -->
      <class name="CompanyScripts.compNewsFeed_Home">
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:55:09 IST" name="openApp" finished-at="2023-03-08T10:55:12 IST" duration-ms="3308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="BookmaarkPost_Comment()[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:55:12 IST" name="BookmaarkPost_Comment" finished-at="2023-03-08T10:55:42 IST" duration-ms="30269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BookmaarkPost_Comment -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:55:42 IST" name="closeApp" finished-at="2023-03-08T10:55:43 IST" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BookmaarkPost_Comment status=SUCCESS method=compNewsFeed_Home.BookmaarkPost_Comment()[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:55:43 IST" name="openApp" finished-at="2023-03-08T10:55:47 IST" duration-ms="4373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="Edit_Post()[pri:1, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:55:47 IST" name="Edit_Post" finished-at="2023-03-08T10:55:59 IST" duration-ms="12102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Edit_Post -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:55:59 IST" name="closeApp" finished-at="2023-03-08T10:55:59 IST" duration-ms="349" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Edit_Post status=SUCCESS method=compNewsFeed_Home.Edit_Post()[pri:1, instance:CompanyScripts.compNewsFeed_Home@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:55:59 IST" name="openApp" finished-at="2023-03-08T10:56:03 IST" duration-ms="3215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method retried="true" signature="Delete_Post()[pri:3, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:56:03 IST" name="Delete_Post" finished-at="2023-03-08T10:56:16 IST" duration-ms="13740" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [] but found [News Feed Deleted Successfully!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [] but found [News Feed Deleted Successfully!]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at CompanyScripts.compNewsFeed_Home.Delete_Post(compNewsFeed_Home.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Delete_Post -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:56:16 IST" name="closeApp" finished-at="2023-03-08T10:56:17 IST" duration-ms="353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Delete_Post status=SKIP method=compNewsFeed_Home.Delete_Post()[pri:3, instance:CompanyScripts.compNewsFeed_Home@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:56:17 IST" name="openApp" finished-at="2023-03-08T10:56:20 IST" duration-ms="3234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="Delete_Post()[pri:3, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:56:20 IST" name="Delete_Post" finished-at="2023-03-08T10:56:33 IST" duration-ms="13103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Delete_Post -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:56:33 IST" name="closeApp" finished-at="2023-03-08T10:56:34 IST" duration-ms="590" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Delete_Post status=SUCCESS method=compNewsFeed_Home.Delete_Post()[pri:3, instance:CompanyScripts.compNewsFeed_Home@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:56:34 IST" name="openApp" finished-at="2023-03-08T10:56:37 IST" duration-ms="3386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="Add_to_bookmark()[pri:4, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:56:37 IST" name="Add_to_bookmark" finished-at="2023-03-08T10:56:50 IST" duration-ms="12886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_to_bookmark -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:56:50 IST" name="closeApp" finished-at="2023-03-08T10:56:50 IST" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Add_to_bookmark status=SUCCESS method=compNewsFeed_Home.Add_to_bookmark()[pri:4, instance:CompanyScripts.compNewsFeed_Home@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:56:50 IST" name="openApp" finished-at="2023-03-08T10:56:53 IST" duration-ms="3181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="searchFeedwithCompany()[pri:5, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:56:53 IST" name="searchFeedwithCompany" finished-at="2023-03-08T10:57:05 IST" duration-ms="11334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchFeedwithCompany -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:57:05 IST" name="closeApp" finished-at="2023-03-08T10:57:05 IST" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchFeedwithCompany status=SUCCESS method=compNewsFeed_Home.searchFeedwithCompany()[pri:5, instance:CompanyScripts.compNewsFeed_Home@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:57:05 IST" name="openApp" finished-at="2023-03-08T10:57:08 IST" duration-ms="3281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="BookmaarkPost_Like()[pri:13, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:57:08 IST" name="BookmaarkPost_Like" finished-at="2023-03-08T10:57:19 IST" duration-ms="10746" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [] but found [News Feed Created Successfully]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [] but found [News Feed Created Successfully]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at CompanyScripts.compNewsFeed_Home.BookmaarkPost_Like(compNewsFeed_Home.java:269)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BookmaarkPost_Like -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:57:19 IST" name="closeApp" finished-at="2023-03-08T10:57:21 IST" duration-ms="1534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BookmaarkPost_Like status=FAILURE method=compNewsFeed_Home.BookmaarkPost_Like()[pri:13, instance:CompanyScripts.compNewsFeed_Home@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:57:21 IST" name="openApp" finished-at="2023-03-08T10:57:24 IST" duration-ms="3543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="BookmaarkPost_share()[pri:15, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:57:24 IST" name="BookmaarkPost_share" finished-at="2023-03-08T10:57:51 IST" duration-ms="26290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BookmaarkPost_share -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:57:51 IST" name="closeApp" finished-at="2023-03-08T10:57:52 IST" duration-ms="1443" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BookmaarkPost_share status=SUCCESS method=compNewsFeed_Home.BookmaarkPost_share()[pri:15, instance:CompanyScripts.compNewsFeed_Home@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:57:52 IST" name="openApp" finished-at="2023-03-08T10:58:02 IST" duration-ms="9992" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="ScrollFeedUntilLoadmore()[pri:16, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:58:02 IST" name="ScrollFeedUntilLoadmore" finished-at="2023-03-08T10:58:11 IST" duration-ms="9240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScrollFeedUntilLoadmore -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:58:11 IST" name="closeApp" finished-at="2023-03-08T10:58:12 IST" duration-ms="632" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ScrollFeedUntilLoadmore status=SUCCESS method=compNewsFeed_Home.ScrollFeedUntilLoadmore()[pri:16, instance:CompanyScripts.compNewsFeed_Home@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:58:12 IST" name="openApp" finished-at="2023-03-08T10:58:15 IST" duration-ms="3395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="LikeAndShareFeedPost()[pri:17, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:58:15 IST" name="LikeAndShareFeedPost" finished-at="2023-03-08T10:58:37 IST" duration-ms="21458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LikeAndShareFeedPost -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:58:37 IST" name="closeApp" finished-at="2023-03-08T10:58:37 IST" duration-ms="294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LikeAndShareFeedPost status=SUCCESS method=compNewsFeed_Home.LikeAndShareFeedPost()[pri:17, instance:CompanyScripts.compNewsFeed_Home@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:58:37 IST" name="openApp" finished-at="2023-03-08T10:58:40 IST" duration-ms="3256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="Play_Posted_Video()[pri:18, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:58:40 IST" name="Play_Posted_Video" finished-at="2023-03-08T10:58:58 IST" duration-ms="17645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Play_Posted_Video -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:CompanyScripts.compNewsFeed_Home@17046283]" started-at="2023-03-08T10:58:58 IST" name="closeApp" finished-at="2023-03-08T10:58:58 IST" duration-ms="285" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Play_Posted_Video status=SUCCESS method=compNewsFeed_Home.Play_Posted_Video()[pri:18, instance:CompanyScripts.compNewsFeed_Home@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- CompanyScripts.compNewsFeed_Home -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
